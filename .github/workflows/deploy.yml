name: Deploy NestJS Application

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      # Servicios en GitHub Actions
      docker:
        image: docker:20.10.7
        options: --privileged
        ports:
          - 3000:8080
          - 9000:9000

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        env:
          MONGOURI: 'mongodb+srv://chemaUser:5EyQXaLBYhGLv9hH@cluster0.pcdwu.mongodb.net/FMP?retryWrites=true&w=majority&appName=Cluster0'

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to be ready..."
          for i in $(seq 1 30); do
            if curl --silent --fail http://localhost:9000/api/system/health | grep '"status":"UP"'; then
              echo "SonarQube is ready!"
              exit 0
            fi
            echo "SonarQube not ready yet, waiting..."
            sleep 10
          done
          echo "SonarQube did not become ready in time"
          exit 1

      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli.zip
          export PATH=$PATH:$PWD/sonar-scanner-4.6.2.2472-linux/bin

      - name: Run SonarQube scan
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: sqa_033c95798ee7a44985988c080fe2be8eca93e193
        run: |
          docker-compose up -d sonarqube h2
          sleep 60 # Esperar a que SonarQube est√© disponible
          sonar-scanner \
            -Dsonar.projectKey=nest-app \
            -Dsonar.sources=./src \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Build Docker image for application
        run: docker-compose up -d app

      - name: Verify application is running
        run: |
          curl --silent --fail http://localhost:3000 || exit 1

      - name: Clean up
        run: docker-compose down
